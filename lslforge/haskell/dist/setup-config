Saved package config for LSLForge-0.1.6.2 written by Cabal-1.6.0.3 using ghc-6.10
LocalBuildInfo {installDirTemplates = InstallDirs {prefix = "C:\\Program Files (x86)\\Haskell", bindir = "$prefix\\bin", libdir = "$prefix", libsubdir = "$pkgid\\$compiler", dynlibdir = "$libdir", libexecdir = "$prefix\\$pkgid", progdir = "$libdir\\hugs\\programs", includedir = "$libdir\\$libsubdir\\include", datadir = "$prefix", datasubdir = "$pkgid", docdir = "$prefix\\doc\\$pkgid", mandir = "$datadir\\man", htmldir = "$docdir\\html", haddockdir = "$htmldir"}, compiler = Compiler {compilerId = CompilerId GHC (Version {versionBranch = [6,10,4], versionTags = []}), compilerExtensions = [(CPP,"-XCPP"),(PostfixOperators,"-XPostfixOperators"),(PatternGuards,"-XPatternGuards"),(UnicodeSyntax,"-XUnicodeSyntax"),(MagicHash,"-XMagicHash"),(PolymorphicComponents,"-XPolymorphicComponents"),(ExistentialQuantification,"-XExistentialQuantification"),(KindSignatures,"-XKindSignatures"),(EmptyDataDecls,"-XEmptyDataDecls"),(ParallelListComp,"-XParallelListComp"),(TransformListComp,"-XTransformListComp"),(ForeignFunctionInterface,"-XForeignFunctionInterface"),(UnliftedFFITypes,"-XUnliftedFFITypes"),(LiberalTypeSynonyms,"-XLiberalTypeSynonyms"),(Rank2Types,"-XRank2Types"),(RankNTypes,"-XRankNTypes"),(ImpredicativeTypes,"-XImpredicativeTypes"),(TypeOperators,"-XTypeOperators"),(RecursiveDo,"-XRecursiveDo"),(Arrows,"-XArrows"),(UnknownExtension "PArr","-XPArr"),(TemplateHaskell,"-XTemplateHaskell"),(QuasiQuotes,"-XQuasiQuotes"),(Generics,"-XGenerics"),(NoImplicitPrelude,"-XNoImplicitPrelude"),(RecordWildCards,"-XRecordWildCards"),(NamedFieldPuns,"-XNamedFieldPuns"),(RecordPuns,"-XRecordPuns"),(DisambiguateRecordFields,"-XDisambiguateRecordFields"),(OverloadedStrings,"-XOverloadedStrings"),(GADTs,"-XGADTs"),(ViewPatterns,"-XViewPatterns"),(TypeFamilies,"-XTypeFamilies"),(BangPatterns,"-XBangPatterns"),(NoMonomorphismRestriction,"-XNoMonomorphismRestriction"),(NoMonoPatBinds,"-XNoMonoPatBinds"),(RelaxedPolyRec,"-XRelaxedPolyRec"),(ExtendedDefaultRules,"-XExtendedDefaultRules"),(ImplicitParams,"-XImplicitParams"),(ScopedTypeVariables,"-XScopedTypeVariables"),(PatternSignatures,"-XPatternSignatures"),(UnboxedTuples,"-XUnboxedTuples"),(StandaloneDeriving,"-XStandaloneDeriving"),(DeriveDataTypeable,"-XDeriveDataTypeable"),(TypeSynonymInstances,"-XTypeSynonymInstances"),(FlexibleContexts,"-XFlexibleContexts"),(FlexibleInstances,"-XFlexibleInstances"),(ConstrainedClassMethods,"-XConstrainedClassMethods"),(MultiParamTypeClasses,"-XMultiParamTypeClasses"),(FunctionalDependencies,"-XFunctionalDependencies"),(GeneralizedNewtypeDeriving,"-XGeneralizedNewtypeDeriving"),(OverlappingInstances,"-XOverlappingInstances"),(UndecidableInstances,"-XUndecidableInstances"),(IncoherentInstances,"-XIncoherentInstances"),(PackageImports,"-XPackageImports"),(NewQualifiedOperators,"-XNewQualifiedOperators")]}, buildDir = "dist\\build", scratchDir = "dist\\scratch", packageDeps = [PackageIdentifier {pkgName = PackageName "HaXml", pkgVersion = Version {versionBranch = [1,19,7], versionTags = []}},PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,9,1,4], versionTags = []}},PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,2,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "directory", pkgVersion = Version {versionBranch = [1,0,0,3], versionTags = []}},PackageIdentifier {pkgName = PackageName "fclabels", pkgVersion = Version {versionBranch = [0,4,2,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "filepath", pkgVersion = Version {versionBranch = [1,1,0,2], versionTags = []}},PackageIdentifier {pkgName = PackageName "haskell98", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "json", pkgVersion = Version {versionBranch = [0,7], versionTags = []}},PackageIdentifier {pkgName = PackageName "monads-fd", pkgVersion = Version {versionBranch = [0,0,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "network", pkgVersion = Version {versionBranch = [2,2,1,2], versionTags = []}},PackageIdentifier {pkgName = PackageName "old-time", pkgVersion = Version {versionBranch = [1,0,0,2], versionTags = []}},PackageIdentifier {pkgName = PackageName "parsec", pkgVersion = Version {versionBranch = [2,1,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "pureMD5", pkgVersion = Version {versionBranch = [1,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "random", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "syb", pkgVersion = Version {versionBranch = [0,1,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "template-haskell", pkgVersion = Version {versionBranch = [2,3,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "transformers", pkgVersion = Version {versionBranch = [0,1,4,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "utf8-string", pkgVersion = Version {versionBranch = [0,3,7], versionTags = []}}], installedPkgs = PackageIndex (fromList [(PackageName "HaXml",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "HaXml", pkgVersion = Version {versionBranch = [1,19,7], versionTags = []}}, license = LGPL, copyright = "", maintainer = "author", author = "Malcolm Wallace <Malcolm.Wallace@cs.york.ac.uk>", stability = "", homepage = "http://www.cs.york.ac.uk/fp/HaXml/", pkgUrl = "", description = "Haskell utilities for parsing, filtering, transforming and\ngenerating XML documents.", category = "Text, XML", exposed = True, exposedModules = [ModuleName ["Text","XML","HaXml"],ModuleName ["Text","XML","HaXml","ByteStringPP"],ModuleName ["Text","XML","HaXml","Combinators"],ModuleName ["Text","XML","HaXml","DtdToHaskell","Convert"],ModuleName ["Text","XML","HaXml","DtdToHaskell","Instance"],ModuleName ["Text","XML","HaXml","DtdToHaskell","TypeDef"],ModuleName ["Text","XML","HaXml","Escape"],ModuleName ["Text","XML","HaXml","Html","Generate"],ModuleName ["Text","XML","HaXml","Html","Parse"],ModuleName ["Text","XML","HaXml","Html","ParseLazy"],ModuleName ["Text","XML","HaXml","Html","Pretty"],ModuleName ["Text","XML","HaXml","Lex"],ModuleName ["Text","XML","HaXml","OneOfN"],ModuleName ["Text","XML","HaXml","Parse"],ModuleName ["Text","XML","HaXml","ParseLazy"],ModuleName ["Text","XML","HaXml","Posn"],ModuleName ["Text","XML","HaXml","Pretty"],ModuleName ["Text","XML","HaXml","SAX"],ModuleName ["Text","XML","HaXml","ShowXmlLazy"],ModuleName ["Text","XML","HaXml","Types"],ModuleName ["Text","XML","HaXml","TypeMapping"],ModuleName ["Text","XML","HaXml","Util"],ModuleName ["Text","XML","HaXml","Validate"],ModuleName ["Text","XML","HaXml","Verbatim"],ModuleName ["Text","XML","HaXml","Wrappers"],ModuleName ["Text","XML","HaXml","XmlContent"],ModuleName ["Text","XML","HaXml","XmlContent","Parser"],ModuleName ["Text","XML","HaXml","XmlContent","Haskell"],ModuleName ["Text","XML","HaXml","Xtract","Combinators"],ModuleName ["Text","XML","HaXml","Xtract","Lex"],ModuleName ["Text","XML","HaXml","Xtract","Parse"]], hiddenModules = [], importDirs = ["C:\\Program Files (x86)\\Haskell\\HaXml-1.19.7\\ghc-6.10.4"], libraryDirs = ["C:\\Program Files (x86)\\Haskell\\HaXml-1.19.7\\ghc-6.10.4"], hsLibraries = ["HSHaXml-1.19.7"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,9,1,4], versionTags = []}},PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,2,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "filepath", pkgVersion = Version {versionBranch = [1,1,0,2], versionTags = []}},PackageIdentifier {pkgName = PackageName "haskell98", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "polyparse", pkgVersion = Version {versionBranch = [1,2], versionTags = []}},PackageIdentifier {pkgName = PackageName "pretty", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "random", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell\\doc\\HaXml-1.19.7\\html\\HaXml.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell\\doc\\HaXml-1.19.7\\html"]}]),(PackageName "Win32",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "Win32", pkgVersion = Version {versionBranch = [2,2,0,0], versionTags = []}}, license = BSD3, copyright = "Alastair Reid, 1999-2003", maintainer = "Esa Ilari Vuokko <ei@vuokko.info>", author = "Alastair Reid", stability = "", homepage = "", pkgUrl = "", description = "", category = "System, Graphics", exposed = True, exposedModules = [ModuleName ["Graphics","Win32","GDI"],ModuleName ["Graphics","Win32","GDI","Bitmap"],ModuleName ["Graphics","Win32","GDI","Brush"],ModuleName ["Graphics","Win32","GDI","Clip"],ModuleName ["Graphics","Win32","GDI","Font"],ModuleName ["Graphics","Win32","GDI","Graphics2D"],ModuleName ["Graphics","Win32","GDI","HDC"],ModuleName ["Graphics","Win32","GDI","Palette"],ModuleName ["Graphics","Win32","GDI","Path"],ModuleName ["Graphics","Win32","GDI","Pen"],ModuleName ["Graphics","Win32","GDI","Region"],ModuleName ["Graphics","Win32","GDI","Types"],ModuleName ["Graphics","Win32"],ModuleName ["Graphics","Win32","Control"],ModuleName ["Graphics","Win32","Dialogue"],ModuleName ["Graphics","Win32","Icon"],ModuleName ["Graphics","Win32","Key"],ModuleName ["Graphics","Win32","Menu"],ModuleName ["Graphics","Win32","Message"],ModuleName ["Graphics","Win32","Misc"],ModuleName ["Graphics","Win32","Resource"],ModuleName ["Graphics","Win32","Window"],ModuleName ["System","Win32"],ModuleName ["System","Win32","DebugApi"],ModuleName ["System","Win32","DLL"],ModuleName ["System","Win32","File"],ModuleName ["System","Win32","FileMapping"],ModuleName ["System","Win32","Info"],ModuleName ["System","Win32","Mem"],ModuleName ["System","Win32","NLS"],ModuleName ["System","Win32","Process"],ModuleName ["System","Win32","Registry"],ModuleName ["System","Win32","SimpleMAPI"],ModuleName ["System","Win32","Time"],ModuleName ["System","Win32","Console"],ModuleName ["System","Win32","Security"],ModuleName ["System","Win32","Types"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\Win32-2.2.0.0"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\Win32-2.2.0.0"], hsLibraries = ["HSWin32-2.2.0.0"], extraLibraries = ["user32","gdi32","winmm","advapi32"], extraGHCiLibraries = [], includeDirs = ["C:\\ghc\\ghc-6.10.4\\Win32-2.2.0.0\\include"], includes = ["HsWin32.h","HsGDI.h","WndProc.h"], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,9,1,4], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/Win32\\Win32.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/Win32"]}]),(PackageName "array",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package defines the classes @IArray@ of immutable arrays and\n@MArray@ of arrays mutable within appropriate monads, as well as\nsome instances of these classes.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Array","Base"],ModuleName ["Data","Array","Diff"],ModuleName ["Data","Array","IArray"],ModuleName ["Data","Array","IO"],ModuleName ["Data","Array","IO","Internals"],ModuleName ["Data","Array","MArray"],ModuleName ["Data","Array","ST"],ModuleName ["Data","Array","Storable"],ModuleName ["Data","Array","Unboxed"],ModuleName ["Data","Array"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\array-0.2.0.0"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\array-0.2.0.0"], hsLibraries = ["HSarray-0.2.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "syb", pkgVersion = Version {versionBranch = [0,1,0,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/array\\array.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/array"]}]),(PackageName "base",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains the Prelude and its support libraries,\nand a large collection of useful libraries ranging from data\nstructures to parsing combinators and debugging utilities.", category = "", exposed = True, exposedModules = [ModuleName ["Foreign","Concurrent"],ModuleName ["GHC","Arr"],ModuleName ["GHC","Base"],ModuleName ["GHC","Classes"],ModuleName ["GHC","Conc"],ModuleName ["GHC","ConsoleHandler"],ModuleName ["GHC","Desugar"],ModuleName ["GHC","Enum"],ModuleName ["GHC","Environment"],ModuleName ["GHC","Err"],ModuleName ["GHC","Exception"],ModuleName ["GHC","Exts"],ModuleName ["GHC","Float"],ModuleName ["GHC","ForeignPtr"],ModuleName ["GHC","Handle"],ModuleName ["GHC","IO"],ModuleName ["GHC","IOBase"],ModuleName ["GHC","Int"],ModuleName ["GHC","List"],ModuleName ["GHC","Num"],ModuleName ["GHC","PArr"],ModuleName ["GHC","Pack"],ModuleName ["GHC","Ptr"],ModuleName ["GHC","Read"],ModuleName ["GHC","Real"],ModuleName ["GHC","ST"],ModuleName ["GHC","STRef"],ModuleName ["GHC","Show"],ModuleName ["GHC","Stable"],ModuleName ["GHC","Storable"],ModuleName ["GHC","TopHandler"],ModuleName ["GHC","Unicode"],ModuleName ["GHC","Weak"],ModuleName ["GHC","Word"],ModuleName ["System","Timeout"],ModuleName ["Control","Applicative"],ModuleName ["Control","Arrow"],ModuleName ["Control","Category"],ModuleName ["Control","Concurrent"],ModuleName ["Control","Concurrent","Chan"],ModuleName ["Control","Concurrent","MVar"],ModuleName ["Control","Concurrent","QSem"],ModuleName ["Control","Concurrent","QSemN"],ModuleName ["Control","Concurrent","SampleVar"],ModuleName ["Control","Exception"],ModuleName ["Control","Exception","Base"],ModuleName ["Control","OldException"],ModuleName ["Control","Monad"],ModuleName ["Control","Monad","Fix"],ModuleName ["Control","Monad","Instances"],ModuleName ["Control","Monad","ST"],ModuleName ["Control","Monad","ST","Lazy"],ModuleName ["Control","Monad","ST","Strict"],ModuleName ["Data","Bits"],ModuleName ["Data","Bool"],ModuleName ["Data","Char"],ModuleName ["Data","Complex"],ModuleName ["Data","Dynamic"],ModuleName ["Data","Either"],ModuleName ["Data","Eq"],ModuleName ["Data","Data"],ModuleName ["Data","Fixed"],ModuleName ["Data","Foldable"],ModuleName ["Data","Function"],ModuleName ["Data","HashTable"],ModuleName ["Data","IORef"],ModuleName ["Data","Int"],ModuleName ["Data","Ix"],ModuleName ["Data","List"],ModuleName ["Data","Maybe"],ModuleName ["Data","Monoid"],ModuleName ["Data","Ord"],ModuleName ["Data","Ratio"],ModuleName ["Data","STRef"],ModuleName ["Data","STRef","Lazy"],ModuleName ["Data","STRef","Strict"],ModuleName ["Data","String"],ModuleName ["Data","Traversable"],ModuleName ["Data","Tuple"],ModuleName ["Data","Typeable"],ModuleName ["Data","Unique"],ModuleName ["Data","Version"],ModuleName ["Data","Word"],ModuleName ["Debug","Trace"],ModuleName ["Foreign"],ModuleName ["Foreign","C"],ModuleName ["Foreign","C","Error"],ModuleName ["Foreign","C","String"],ModuleName ["Foreign","C","Types"],ModuleName ["Foreign","ForeignPtr"],ModuleName ["Foreign","Marshal"],ModuleName ["Foreign","Marshal","Alloc"],ModuleName ["Foreign","Marshal","Array"],ModuleName ["Foreign","Marshal","Error"],ModuleName ["Foreign","Marshal","Pool"],ModuleName ["Foreign","Marshal","Utils"],ModuleName ["Foreign","Ptr"],ModuleName ["Foreign","StablePtr"],ModuleName ["Foreign","Storable"],ModuleName ["Numeric"],ModuleName ["Prelude"],ModuleName ["System","Console","GetOpt"],ModuleName ["System","CPUTime"],ModuleName ["System","Environment"],ModuleName ["System","Exit"],ModuleName ["System","IO"],ModuleName ["System","IO","Error"],ModuleName ["System","IO","Unsafe"],ModuleName ["System","Info"],ModuleName ["System","Mem"],ModuleName ["System","Mem","StableName"],ModuleName ["System","Mem","Weak"],ModuleName ["System","Posix","Internals"],ModuleName ["System","Posix","Types"],ModuleName ["Text","ParserCombinators","ReadP"],ModuleName ["Text","ParserCombinators","ReadPrec"],ModuleName ["Text","Printf"],ModuleName ["Text","Read"],ModuleName ["Text","Read","Lex"],ModuleName ["Text","Show"],ModuleName ["Text","Show","Functions"],ModuleName ["Unsafe","Coerce"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\base-4.1.0.0"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\base-4.1.0.0"], hsLibraries = ["HSbase-4.1.0.0"], extraLibraries = ["wsock32","user32","shell32"], extraGHCiLibraries = [], includeDirs = ["C:\\ghc\\ghc-6.10.4\\base-4.1.0.0\\include"], includes = ["HsBase.h"], depends = [PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "integer", pkgVersion = Version {versionBranch = [0,1,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "rts", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/base\\base.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/base"]}]),(PackageName "binary",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "binary", pkgVersion = Version {versionBranch = [0,5,0,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Lennart Kolmodin, Don Stewart <dons@galois.com>", author = "Lennart Kolmodin <kolmodin@dtek.chalmers.se>", stability = "provisional", homepage = "http://code.haskell.org/binary/", pkgUrl = "", description = "Efficient, pure binary serialisation using lazy ByteStrings.\nHaskell values may be encoded to and from binary formats,\nwritten to disk as binary, or sent over the network.\nSerialisation speeds of over 1 G\\/sec have been observed,\nso this library should be suitable for high performance\nscenarios.", category = "Data, Parsing", exposed = True, exposedModules = [ModuleName ["Data","Binary"],ModuleName ["Data","Binary","Put"],ModuleName ["Data","Binary","Get"],ModuleName ["Data","Binary","Builder"]], hiddenModules = [], importDirs = ["C:\\Program Files (x86)\\Haskell\\binary-0.5.0.2\\ghc-6.10.4"], libraryDirs = ["C:\\Program Files (x86)\\Haskell\\binary-0.5.0.2\\ghc-6.10.4"], hsLibraries = ["HSbinary-0.5.0.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,9,1,4], versionTags = []}},PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,2,0,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell\\doc\\binary-0.5.0.2\\html\\binary.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell\\doc\\binary-0.5.0.2\\html"]}]),(PackageName "bytestring",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,9,1,4], versionTags = []}}, license = BSD3, copyright = "Copyright (c) Don Stewart   2005-2008,\n(c) Duncan Coutts 2006-2008,\n(c) David Roundy  2003-2005.", maintainer = "dons@galois.com, duncan@haskell.org", author = "Don Stewart, Duncan Coutts", stability = "provisional", homepage = "http://www.cse.unsw.edu.au/~dons/fps.html", pkgUrl = "", description = "A time and space-efficient implementation of byte vectors using\npacked Word8 arrays, suitable for high performance use, both in terms\nof large data quantities, or high speed requirements. Byte vectors\nare encoded as strict 'Word8' arrays of bytes, and lazy lists of\nstrict chunks, held in a 'ForeignPtr', and can be passed between C\nand Haskell with little effort.\n\nTest coverage data for this library is available at:\n<http://code.haskell.org/~dons/tests/bytestring/hpc_index.html>", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","ByteString"],ModuleName ["Data","ByteString","Char8"],ModuleName ["Data","ByteString","Unsafe"],ModuleName ["Data","ByteString","Internal"],ModuleName ["Data","ByteString","Lazy"],ModuleName ["Data","ByteString","Lazy","Char8"],ModuleName ["Data","ByteString","Lazy","Internal"],ModuleName ["Data","ByteString","Fusion"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\bytestring-0.9.1.4"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\bytestring-0.9.1.4"], hsLibraries = ["HSbytestring-0.9.1.4"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\ghc\\ghc-6.10.4\\bytestring-0.9.1.4\\include"], includes = ["fpstring.h"], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/bytestring\\bytestring.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/bytestring"]}]),(PackageName "cereal",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "cereal", pkgVersion = Version {versionBranch = [0,4,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Trevor Elliott <trevor@galois.com>", author = "Lennart Kolmodin <kolmodin@dtek.chalmers.se>,\nGalois Inc.,\nLemmih <lemmih@gmail.com>,\nBas van Dijk <v.dijk.bas@gmail.com>", stability = "provisional", homepage = "", pkgUrl = "", description = "A binary serialization library, similar to binary, that introduces an isolate\nprimitive for parser isolation, and replaces the asynchronous errors with a\nuser-handleable Either type.  Similar to binary in performance, but uses a\nstrict ByteString instead of a lazy ByteString, thus restricting it to\noperating on finite inputs.", category = "Data, Parsing", exposed = True, exposedModules = [ModuleName ["Data","Serialize"],ModuleName ["Data","Serialize","Put"],ModuleName ["Data","Serialize","Get"],ModuleName ["Data","Serialize","Builder"],ModuleName ["Data","Serialize","IEEE754"]], hiddenModules = [], importDirs = ["C:\\Program Files (x86)\\Haskell\\cereal-0.4.0.1\\ghc-6.10.4"], libraryDirs = ["C:\\Program Files (x86)\\Haskell\\cereal-0.4.0.1\\ghc-6.10.4"], hsLibraries = ["HScereal-0.4.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,9,1,4], versionTags = []}},PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,2,0,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell\\doc\\cereal-0.4.0.1\\html\\cereal.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell\\doc\\cereal-0.4.0.1\\html"]}]),(PackageName "containers",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,2,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains efficient general-purpose implementations\nof various basic immutable container types.  The declared cost of\neach operation is either worst-case or amortized, but remains\nvalid even if structures are shared.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Graph"],ModuleName ["Data","IntMap"],ModuleName ["Data","IntSet"],ModuleName ["Data","Map"],ModuleName ["Data","Sequence"],ModuleName ["Data","Set"],ModuleName ["Data","Tree"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\containers-0.2.0.1"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\containers-0.2.0.1"], hsLibraries = ["HScontainers-0.2.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/containers\\containers.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/containers"]}]),(PackageName "directory",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "directory", pkgVersion = Version {versionBranch = [1,0,0,3], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package provides a library for handling directories.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Directory"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\directory-1.0.0.3"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\directory-1.0.0.3"], hsLibraries = ["HSdirectory-1.0.0.3"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\ghc\\ghc-6.10.4\\directory-1.0.0.3\\include"], includes = ["HsDirectory.h"], depends = [PackageIdentifier {pkgName = PackageName "Win32", pkgVersion = Version {versionBranch = [2,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "filepath", pkgVersion = Version {versionBranch = [1,1,0,2], versionTags = []}},PackageIdentifier {pkgName = PackageName "old-time", pkgVersion = Version {versionBranch = [1,0,0,2], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/directory\\directory.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/directory"]}]),(PackageName "fclabels",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "fclabels", pkgVersion = Version {versionBranch = [0,4,2,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Sebastiaan Visser <sfvisser@cs.uu.nl>", author = "Sebastiaan Visser, Erik Hesselink, Chris Eidhof, Sjoerd Visscher.", stability = "", homepage = "", pkgUrl = "", description = "First class labels that act as bidirectional record fields.\nThe labels are fully composable and can be used to get, set\nand modify parts of a datatype in a consistent way. The label\ndatatype, conveniently called `:->', is an instance of the\n`Category' type class meaning it has a proper identity and\ncomposition. The library has support for automatically\nderiving labels from record selectors that start with an\nunderscore. Labels can be used in a purely functional setting\nor be applied to mutable state in some state monad.\n\nTo illustrate this package take the following two example\ndatatypes (somehow Haddock removes the braces):\n\n> data Person = Person\n>     _name   :: String\n>   , _age    :: Int\n>   , _isMale :: Bool\n>   , _place  :: Place\n>\n\n> data Place = Place\n>     _city\n>   , _country\n>   , _continent :: String\n>\n\nBoth are record datatypes with all record labels prefixed with\nan underscore.  This underscore is an indication for our\nTemplate Haskell code to derive labels for these fields.\nDeriving labels can be done with this simple one-liner:\n\n> $(mkLabels [''Person, ''Place])\n\nLabel function will be generated, label type signatures will\nnot. This is actually not that bad, by writing the signatures\ndown yourself you will be able to give them documentation,\nsomething that would be hard otherwise. So, lets give\nfunctions a signature by hand:\n\n> name      :: Person :-> String\n> age       :: Person :-> Int\n> isMale    :: Person :-> Bool\n> place     :: Person :-> Place\n> city      :: Place :-> String\n> country   :: Place :-> String\n> continent :: Place :-> String\n\nThese type signatures look very similar to the function types\nfor normal record labels, except that the additional colon\nindicates a true first class label.  These labels can be used\nto get, set and modify the value and are fully composable.\n\nNow let look at this example. This 71 old fellow, called Jan,\nis my neighbour and didn't mind using him as an example:\n\n> jan :: Person\n> jan = Person \"Jan\" 71 True (Place \"Utrecht\" \"The Netherlands\" \"Europe\")\n\nWhen we want to be sure Jan is really as old as he claims we\ncan use the @get@ function for labels to get the age out as an\ninteger:\n\n> hisAge :: Int\n> hisAge = get age jan\n\nConsider he now wants to move to Amsterdam, what better place\nto spend your old days. Using composition when can change the\ncity value deep inside the structure:\n\n> moveToAmsterdam :: Person -> Person\n> moveToAmsterdam = set (city . place) \"Amsterdam\"\n\n> moveToAmsterdam jan ==\n>  Person \"Jan\" 71 True (Place \"Amsterdam\" \"The Netherlands\" \"Europe\")\n\nComposition is done using the dot operator which is part of\nthe @Control.Category@ module. Make sure to import this module\nand hide the default @(.)@, @id@ and @mod@ function from the\nPrelude.\n\nNow, because Jan is an old guy moving to another city is not a\nvery easy task, this really takes a while. So it will probably\ntake no less than two years before he will actually be\nsettled. To reflect this change it might be useful to have a\nfirst class view on the @Person@ data type that only reveals\nthe age and city.  This can be done by using a neat\n@Applicative@ functor instance:\n\n> ageAndCity :: Person :-> (Int, String)\n> ageAndCity = Label $ (,) <$> fst `for` age <*> snd `for` (city . place)\n\nBecause the applicative type class on its own is not very\ncapable of expressing bidirectional relations, which we need\nfor our labels, the actual instance is defined for an internal\nhelper structure called @Point@. Points are a bit more general\nthan labels. As you can see above the @Label@ constructor has\nto be used to convert a @Point@ back into a @Label@. The @for@\nfunction must be used to indicate which partial destructor to\nuse for which label in the applicative composition.\n\nNow that we have an appropriate age+city view on the @Person@\ndata type (which is itself a label again), we can use the\n@mod@ function to make Jan move to Amsterdam over exactly two\nyears:\n\n> moveToAmsterdamOverTwoYears :: Person -> Person\n> moveToAmsterdamOverTwoYears = mod ageAndCity (\\(a, b) -> (a+2, \"Amsterdam\"))\n\n> moveToAmsterdamOverTwoYears jan ==\n>  Person \"Jan\" 73 True (Place \"Amsterdam\" \"The Netherlands\" \"Europe\")\n\nThis package also contains a lens data type that encodes\nbidirectional functions. Just like labels lenses can be\ncomposed to other lenses using the @Control.Category@ type\nclass. Lenses can be used to change the type of a label. The\n@Iso@ type class, which can be seen as a bidirectional\nfunctor, can be used to apply lenses to labels. For example,\nwhen we want to threat the age of a person as a string we can\ndo the following:\n\n> ageAsString :: Person :-> String\n> ageAsString :: (show <-> read) `iso` age\n\nThis library might look cryptic at first sight, but give it a\ntry it is not that hard.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","Record","Label"]], hiddenModules = [ModuleName ["Data","Record","Label","TH"]], importDirs = ["C:\\Program Files (x86)\\Haskell\\fclabels-0.4.2.1\\ghc-6.10.4"], libraryDirs = ["C:\\Program Files (x86)\\Haskell\\fclabels-0.4.2.1\\ghc-6.10.4"], hsLibraries = ["HSfclabels-0.4.2.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "monads-fd", pkgVersion = Version {versionBranch = [0,0,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "template-haskell", pkgVersion = Version {versionBranch = [2,3,0,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell\\doc\\fclabels-0.4.2.1\\html\\fclabels.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell\\doc\\fclabels-0.4.2.1\\html"]}]),(PackageName "filepath",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "filepath", pkgVersion = Version {versionBranch = [1,1,0,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "", author = "Neil Mitchell", stability = "", homepage = "http://www-users.cs.york.ac.uk/~ndm/filepath/", pkgUrl = "", description = "", category = "System", exposed = True, exposedModules = [ModuleName ["System","FilePath"],ModuleName ["System","FilePath","Posix"],ModuleName ["System","FilePath","Windows"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\filepath-1.1.0.2"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\filepath-1.1.0.2"], hsLibraries = ["HSfilepath-1.1.0.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/filepath\\filepath.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/filepath"]}]),(PackageName "ghc-prim",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "GHC primitives.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","Prim"],ModuleName ["GHC","Bool"],ModuleName ["GHC","Generics"],ModuleName ["GHC","Ordering"],ModuleName ["GHC","PrimopWrappers"],ModuleName ["GHC","IntWord32"],ModuleName ["GHC","IntWord64"],ModuleName ["GHC","Tuple"],ModuleName ["GHC","Types"],ModuleName ["GHC","Unit"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\ghc-prim-0.1.0.0"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\ghc-prim-0.1.0.0"], hsLibraries = ["HSghc-prim-0.1.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "rts", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/ghc-prim\\ghc-prim.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/ghc-prim"]}]),(PackageName "haskell98",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "haskell98", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "http://www.haskell.org/definition/", pkgUrl = "", description = "This package provides compatibility with the modules of Haskell\n98 and the FFI addendum, by means of wrappers around modules from\nthe base package (which in many cases have additional features).\nHowever Prelude, Numeric and Foreign are provided directly by\nthe base package.", category = "", exposed = True, exposedModules = [ModuleName ["Array"],ModuleName ["CPUTime"],ModuleName ["Char"],ModuleName ["Complex"],ModuleName ["Directory"],ModuleName ["IO"],ModuleName ["Ix"],ModuleName ["List"],ModuleName ["Locale"],ModuleName ["Maybe"],ModuleName ["Monad"],ModuleName ["Random"],ModuleName ["Ratio"],ModuleName ["System"],ModuleName ["Time"],ModuleName ["Bits"],ModuleName ["CError"],ModuleName ["CForeign"],ModuleName ["CString"],ModuleName ["CTypes"],ModuleName ["ForeignPtr"],ModuleName ["Int"],ModuleName ["MarshalAlloc"],ModuleName ["MarshalArray"],ModuleName ["MarshalError"],ModuleName ["MarshalUtils"],ModuleName ["Ptr"],ModuleName ["StablePtr"],ModuleName ["Storable"],ModuleName ["Word"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\haskell98-1.0.1.0"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\haskell98-1.0.1.0"], hsLibraries = ["HShaskell98-1.0.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "directory", pkgVersion = Version {versionBranch = [1,0,0,3], versionTags = []}},PackageIdentifier {pkgName = PackageName "old-locale", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "old-time", pkgVersion = Version {versionBranch = [1,0,0,2], versionTags = []}},PackageIdentifier {pkgName = PackageName "process", pkgVersion = Version {versionBranch = [1,0,1,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "random", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/haskell98\\haskell98.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/haskell98"]}]),(PackageName "integer",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "integer", pkgVersion = Version {versionBranch = [0,1,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains an Integer library based on GMP.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","Integer"],ModuleName ["GHC","Integer","Internals"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\integer-0.1.0.1"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\integer-0.1.0.1"], hsLibraries = ["HSinteger-0.1.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/integer\\integer.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/integer"]}]),(PackageName "json",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "json", pkgVersion = Version {versionBranch = [0,7], versionTags = []}}, license = BSD3, copyright = "(c) 2007-2009 Galois Inc.", maintainer = "Sigbjorn Finne <sof@galois.com>", author = "Galois Inc.", stability = "", homepage = "", pkgUrl = "", description = "JSON (JavaScript Object Notation) is a lightweight data-interchange\nformat. It is easy for humans to read and write. It is easy for\nmachines to parse and generate.  It is based on a subset of the\nJavaScript Programming Language, Standard ECMA-262 3rd Edition -\nDecember 1999.\n\nThis library provides a parser and pretty printer for converting\nbetween Haskell values and JSON.", category = "Web", exposed = True, exposedModules = [ModuleName ["Text","JSON","Parsec"],ModuleName ["Text","JSON","Pretty"],ModuleName ["Text","JSON"],ModuleName ["Text","JSON","Types"],ModuleName ["Text","JSON","String"],ModuleName ["Text","JSON","ReadP"]], hiddenModules = [], importDirs = ["C:\\Program Files (x86)\\Haskell\\json-0.7\\ghc-6.10.4"], libraryDirs = ["C:\\Program Files (x86)\\Haskell\\json-0.7\\ghc-6.10.4"], hsLibraries = ["HSjson-0.7"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,9,1,4], versionTags = []}},PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,2,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "mtl", pkgVersion = Version {versionBranch = [1,1,0,2], versionTags = []}},PackageIdentifier {pkgName = PackageName "parsec", pkgVersion = Version {versionBranch = [2,1,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "pretty", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "text", pkgVersion = Version {versionBranch = [0,5], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell\\doc\\json-0.7\\html\\json.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell\\doc\\json-0.7\\html"]}]),(PackageName "monads-fd",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "monads-fd", pkgVersion = Version {versionBranch = [0,0,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Ross Paterson <ross@soi.city.ac.uk>", author = "Andy Gill", stability = "", homepage = "", pkgUrl = "", description = "Monad classes using functional dependencies, with instances\nfor various monad transformers, inspired by the paper\n/Functional Programming with Overloading and Higher-Order Polymorphism/,\nby Mark P Jones, in /Advanced School of Functional Programming/, 1995\n(<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>).\n\nThis package is almost a compatible replacement for the @mtl@ package.\nClient packages will need to depend on this one and on @transformers@.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Monad","Cont"],ModuleName ["Control","Monad","Cont","Class"],ModuleName ["Control","Monad","Error"],ModuleName ["Control","Monad","Error","Class"],ModuleName ["Control","Monad","List"],ModuleName ["Control","Monad","RWS"],ModuleName ["Control","Monad","RWS","Class"],ModuleName ["Control","Monad","RWS","Lazy"],ModuleName ["Control","Monad","RWS","Strict"],ModuleName ["Control","Monad","Reader"],ModuleName ["Control","Monad","Reader","Class"],ModuleName ["Control","Monad","State"],ModuleName ["Control","Monad","State","Class"],ModuleName ["Control","Monad","State","Lazy"],ModuleName ["Control","Monad","State","Strict"],ModuleName ["Control","Monad","Writer"],ModuleName ["Control","Monad","Writer","Class"],ModuleName ["Control","Monad","Writer","Lazy"],ModuleName ["Control","Monad","Writer","Strict"]], hiddenModules = [], importDirs = ["C:\\Program Files (x86)\\Haskell\\monads-fd-0.0.0.1\\ghc-6.10.4"], libraryDirs = ["C:\\Program Files (x86)\\Haskell\\monads-fd-0.0.0.1\\ghc-6.10.4"], hsLibraries = ["HSmonads-fd-0.0.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "transformers", pkgVersion = Version {versionBranch = [0,1,4,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell\\doc\\monads-fd-0.0.0.1\\html\\monads-fd.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell\\doc\\monads-fd-0.0.0.1\\html"]}]),(PackageName "mtl",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "mtl", pkgVersion = Version {versionBranch = [1,1,0,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "Andy Gill", stability = "", homepage = "", pkgUrl = "", description = "A monad transformer library, inspired by the paper /Functional\nProgramming with Overloading and Higher-Order Polymorphism/,\nby Mark P Jones (<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>),\nAdvanced School of Functional Programming, 1995.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Monad","Cont"],ModuleName ["Control","Monad","Cont","Class"],ModuleName ["Control","Monad","Error"],ModuleName ["Control","Monad","Error","Class"],ModuleName ["Control","Monad","Identity"],ModuleName ["Control","Monad","List"],ModuleName ["Control","Monad","RWS"],ModuleName ["Control","Monad","RWS","Class"],ModuleName ["Control","Monad","RWS","Lazy"],ModuleName ["Control","Monad","RWS","Strict"],ModuleName ["Control","Monad","Reader"],ModuleName ["Control","Monad","Reader","Class"],ModuleName ["Control","Monad","State"],ModuleName ["Control","Monad","State","Class"],ModuleName ["Control","Monad","State","Lazy"],ModuleName ["Control","Monad","State","Strict"],ModuleName ["Control","Monad","Trans"],ModuleName ["Control","Monad","Writer"],ModuleName ["Control","Monad","Writer","Class"],ModuleName ["Control","Monad","Writer","Lazy"],ModuleName ["Control","Monad","Writer","Strict"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\mtl-1.1.0.2"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\mtl-1.1.0.2"], hsLibraries = ["HSmtl-1.1.0.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/mtl\\mtl.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/mtl"]}]),(PackageName "network",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "network", pkgVersion = Version {versionBranch = [2,2,1,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Johan Tibell <johan.tibell@gmail.com>", author = "", stability = "", homepage = "", pkgUrl = "", description = "", category = "Network", exposed = True, exposedModules = [ModuleName ["Network"],ModuleName ["Network","BSD"],ModuleName ["Network","Socket","Internal"],ModuleName ["Network","Socket"],ModuleName ["Network","URI"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\network-2.2.1.2"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\network-2.2.1.2"], hsLibraries = ["HSnetwork-2.2.1.2"], extraLibraries = ["ws2_32"], extraGHCiLibraries = [], includeDirs = ["C:\\ghc\\ghc-6.10.4\\network-2.2.1.2\\include"], includes = ["HsNet.h"], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "parsec", pkgVersion = Version {versionBranch = [2,1,0,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/network\\network.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/network"]}]),(PackageName "old-locale",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "old-locale", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package provides the old locale library.\nFor new code, the new locale library is recommended.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Locale"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\old-locale-1.0.0.1"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\old-locale-1.0.0.1"], hsLibraries = ["HSold-locale-1.0.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/old-locale\\old-locale.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/old-locale"]}]),(PackageName "old-time",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "old-time", pkgVersion = Version {versionBranch = [1,0,0,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package provides the old time library.\nFor new code, the new time library is recommended.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Time"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\old-time-1.0.0.2"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\old-time-1.0.0.2"], hsLibraries = ["HSold-time-1.0.0.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\ghc\\ghc-6.10.4\\old-time-1.0.0.2\\include"], includes = ["HsTime.h"], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "old-locale", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/old-time\\old-time.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/old-time"]}]),(PackageName "packedstring",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "packedstring", pkgVersion = Version {versionBranch = [0,1,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "(Deprecated) Packed Strings.", category = "", exposed = True, exposedModules = [ModuleName ["Data","PackedString"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\packedstring-0.1.0.1"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\packedstring-0.1.0.1"], hsLibraries = ["HSpackedstring-0.1.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/packedstring\\packedstring.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/packedstring"]}]),(PackageName "parsec",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "parsec", pkgVersion = Version {versionBranch = [2,1,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Daan Leijen <daan@cs.uu.nl>", author = "Daan Leijen <daan@cs.uu.nl>", stability = "", homepage = "http://www.cs.uu.nl/~daan/parsec.html", pkgUrl = "", description = "Parsec is designed from scratch as an industrial-strength parser\nlibrary.  It is simple, safe, well documented (on the package\nhomepage), has extensive libraries and good error messages,\nand is also fast.", category = "Parsing", exposed = True, exposedModules = [ModuleName ["Text","ParserCombinators","Parsec","Language"],ModuleName ["Text","ParserCombinators","Parsec","Token"],ModuleName ["Text","ParserCombinators","Parsec","Error"],ModuleName ["Text","ParserCombinators","Parsec","Char"],ModuleName ["Text","ParserCombinators","Parsec","Combinator"],ModuleName ["Text","ParserCombinators","Parsec","Expr"],ModuleName ["Text","ParserCombinators","Parsec","Perm"],ModuleName ["Text","ParserCombinators","Parsec","Pos"],ModuleName ["Text","ParserCombinators","Parsec","Prim"],ModuleName ["Text","ParserCombinators","Parsec"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\parsec-2.1.0.1"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\parsec-2.1.0.1"], hsLibraries = ["HSparsec-2.1.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/parsec\\parsec.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/parsec"]}]),(PackageName "polyparse",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "polyparse", pkgVersion = Version {versionBranch = [1,2], versionTags = []}}, license = LGPL, copyright = "", maintainer = "author", author = "Malcolm Wallace <Malcolm.Wallace@cs.york.ac.uk>", stability = "", homepage = "http://www.cs.york.ac.uk/fp/polyparse/", pkgUrl = "", description = "A variety of alternative parser combinator libraries, including\nthe original HuttonMeijer set.  The Poly sets have features like\ngood error reporting, arbitrary token type, running state, lazy\nparsing, and so on.  Finally, Text.Parse is a proposed\nreplacement for the standard Read class, for better\ndeserialisation of Haskell values from Strings.", category = "Text, Parsing", exposed = True, exposedModules = [ModuleName ["Text","ParserCombinators","HuttonMeijer"],ModuleName ["Text","ParserCombinators","HuttonMeijerWallace"],ModuleName ["Text","ParserCombinators","Poly"],ModuleName ["Text","ParserCombinators","Poly","Base"],ModuleName ["Text","ParserCombinators","Poly","Plain"],ModuleName ["Text","ParserCombinators","Poly","Lazy"],ModuleName ["Text","ParserCombinators","Poly","State"],ModuleName ["Text","ParserCombinators","Poly","StateLazy"],ModuleName ["Text","Parse"]], hiddenModules = [], importDirs = ["C:\\Program Files (x86)\\Haskell\\polyparse-1.2\\ghc-6.10.4"], libraryDirs = ["C:\\Program Files (x86)\\Haskell\\polyparse-1.2\\ghc-6.10.4"], hsLibraries = ["HSpolyparse-1.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "haskell98", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell\\doc\\polyparse-1.2\\html\\polyparse.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell\\doc\\polyparse-1.2\\html"]}]),(PackageName "pretty",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "pretty", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains John Hughes's pretty-printing library,\nheavily modified by Simon Peyton Jones.", category = "Text", exposed = True, exposedModules = [ModuleName ["Text","PrettyPrint"],ModuleName ["Text","PrettyPrint","HughesPJ"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\pretty-1.0.1.0"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\pretty-1.0.1.0"], hsLibraries = ["HSpretty-1.0.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/pretty\\pretty.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/pretty"]}]),(PackageName "process",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "process", pkgVersion = Version {versionBranch = [1,0,1,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains libraries for dealing with system processes.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Process","Internals"],ModuleName ["System","Process"],ModuleName ["System","Cmd"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\process-1.0.1.1"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\process-1.0.1.1"], hsLibraries = ["HSprocess-1.0.1.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\ghc\\ghc-6.10.4\\process-1.0.1.1\\include"], includes = ["runProcess.h"], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "directory", pkgVersion = Version {versionBranch = [1,0,0,3], versionTags = []}},PackageIdentifier {pkgName = PackageName "filepath", pkgVersion = Version {versionBranch = [1,1,0,2], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/process\\process.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/process"]}]),(PackageName "pureMD5",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "pureMD5", pkgVersion = Version {versionBranch = [1,1,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Thomas DuBuisson", author = "Thomas DuBuisson <thomas.dubuisson@gmail.com>", stability = "stable", homepage = "", pkgUrl = "", description = "An unrolled implementation of MD5 purely in Haskell.", category = "Data, Cryptography", exposed = True, exposedModules = [ModuleName ["Data","Digest","Pure","MD5"]], hiddenModules = [], importDirs = ["C:\\Program Files (x86)\\Haskell\\pureMD5-1.1.0.0\\ghc-6.10.4"], libraryDirs = ["C:\\Program Files (x86)\\Haskell\\pureMD5-1.1.0.0\\ghc-6.10.4"], hsLibraries = ["HSpureMD5-1.1.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "binary", pkgVersion = Version {versionBranch = [0,5,0,2], versionTags = []}},PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,9,1,4], versionTags = []}},PackageIdentifier {pkgName = PackageName "cereal", pkgVersion = Version {versionBranch = [0,4,0,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell\\doc\\pureMD5-1.1.0.0\\html\\pureMD5.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell\\doc\\pureMD5-1.1.0.0\\html"]}]),(PackageName "random",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "random", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package provides a random number library.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Random"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\random-1.0.0.1"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\random-1.0.0.1"], hsLibraries = ["HSrandom-1.0.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "old-time", pkgVersion = Version {versionBranch = [1,0,0,2], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/random\\random.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/random"]}]),(PackageName "rts",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "rts", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "glasgow-haskell-users@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "", category = "", exposed = True, exposedModules = [], hiddenModules = [], importDirs = [], libraryDirs = ["C:\\ghc\\ghc-6.10.4","C:\\ghc\\ghc-6.10.4/gcc-lib"], hsLibraries = ["HSrts"], extraLibraries = ["m","ffi","gmp","wsock32"], extraGHCiLibraries = [], includeDirs = ["C:\\ghc\\ghc-6.10.4/include"], includes = ["Stg.h"], depends = [], hugsOptions = [], ccOptions = [], ldOptions = ["-u","_ghczmprim_GHCziTypes_Izh_static_info","-u","_ghczmprim_GHCziTypes_Czh_static_info","-u","_ghczmprim_GHCziTypes_Fzh_static_info","-u","_ghczmprim_GHCziTypes_Dzh_static_info","-u","_base_GHCziPtr_Ptr_static_info","-u","_base_GHCziWord_Wzh_static_info","-u","_base_GHCziInt_I8zh_static_info","-u","_base_GHCziInt_I16zh_static_info","-u","_base_GHCziInt_I32zh_static_info","-u","_base_GHCziInt_I64zh_static_info","-u","_base_GHCziWord_W8zh_static_info","-u","_base_GHCziWord_W16zh_static_info","-u","_base_GHCziWord_W32zh_static_info","-u","_base_GHCziWord_W64zh_static_info","-u","_base_GHCziStable_StablePtr_static_info","-u","_ghczmprim_GHCziTypes_Izh_con_info","-u","_ghczmprim_GHCziTypes_Czh_con_info","-u","_ghczmprim_GHCziTypes_Fzh_con_info","-u","_ghczmprim_GHCziTypes_Dzh_con_info","-u","_base_GHCziPtr_Ptr_con_info","-u","_base_GHCziPtr_FunPtr_con_info","-u","_base_GHCziStable_StablePtr_con_info","-u","_ghczmprim_GHCziBool_False_closure","-u","_ghczmprim_GHCziBool_True_closure","-u","_base_GHCziPack_unpackCString_closure","-u","_base_GHCziIOBase_stackOverflow_closure","-u","_base_GHCziIOBase_heapOverflow_closure","-u","_base_ControlziExceptionziBase_nonTermination_closure","-u","_base_GHCziIOBase_blockedOnDeadMVar_closure","-u","_base_GHCziIOBase_blockedIndefinitely_closure","-u","_base_ControlziExceptionziBase_nestedAtomically_closure","-u","_base_GHCziWeak_runFinalizzerBatch_closure","-u","_base_GHCziTopHandler_runIO_closure","-u","_base_GHCziTopHandler_runNonIO_closure","-u","_base_GHCziConc_runHandlers_closure","-u","_base_GHCziConc_ensureIOManagerIsRunning_closure"], frameworkDirs = [], frameworks = [], haddockInterfaces = [], haddockHTMLs = []}]),(PackageName "syb",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "syb", pkgVersion = Version {versionBranch = [0,1,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains the generics system described in the\n/Scrap Your Boilerplate/ papers (see <http://www.cs.vu.nl/boilerplate/>).\nIt defines the @Data@ class of types permitting folding and unfolding\nof constructor applications, instances of this class for primitive\ntypes, and a variety of traversals.", category = "", exposed = True, exposedModules = [ModuleName ["Data","Generics"],ModuleName ["Data","Generics","Aliases"],ModuleName ["Data","Generics","Basics"],ModuleName ["Data","Generics","Instances"],ModuleName ["Data","Generics","Schemes"],ModuleName ["Data","Generics","Text"],ModuleName ["Data","Generics","Twins"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\syb-0.1.0.1"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\syb-0.1.0.1"], hsLibraries = ["HSsyb-0.1.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/syb\\syb.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/syb"]}]),(PackageName "template-haskell",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "template-haskell", pkgVersion = Version {versionBranch = [2,3,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "Facilities for manipulating Haskell source code using Template Haskell.", category = "", exposed = True, exposedModules = [ModuleName ["Language","Haskell","TH","Syntax"],ModuleName ["Language","Haskell","TH","PprLib"],ModuleName ["Language","Haskell","TH","Ppr"],ModuleName ["Language","Haskell","TH","Lib"],ModuleName ["Language","Haskell","TH","Quote"],ModuleName ["Language","Haskell","TH"]], hiddenModules = [], importDirs = ["C:\\ghc\\ghc-6.10.4\\template-haskell-2.3.0.1"], libraryDirs = ["C:\\ghc\\ghc-6.10.4\\template-haskell-2.3.0.1"], hsLibraries = ["HStemplate-haskell-2.3.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,2,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "packedstring", pkgVersion = Version {versionBranch = [0,1,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "pretty", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\ghc\\ghc-6.10.4/doc/libraries/template-haskell\\template-haskell.haddock"], haddockHTMLs = ["$httptopdir/doc/libraries/template-haskell"]}]),(PackageName "text",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "text", pkgVersion = Version {versionBranch = [0,5], versionTags = []}}, license = BSD3, copyright = "2008-2009 Tom Harper, 2009 Bryan O'Sullivan", maintainer = "Bryan O'Sullivan <bos@serpentine.com>\nTom Harper <rtharper@aftereternity.co.uk>\nDuncan Coutts <duncan@haskell.org>", author = "Tom Harper <rtharper@aftereternity.co.uk>", stability = "", homepage = "", pkgUrl = "", description = "An efficient packed Unicode text type.", category = "Data, Text", exposed = True, exposedModules = [ModuleName ["Data","Text"],ModuleName ["Data","Text","Encoding"],ModuleName ["Data","Text","Encoding","Error"],ModuleName ["Data","Text","Foreign"],ModuleName ["Data","Text","Lazy"],ModuleName ["Data","Text","Lazy","Encoding"]], hiddenModules = [ModuleName ["Data","Text","Array"],ModuleName ["Data","Text","Encoding","Fusion"],ModuleName ["Data","Text","Encoding","Fusion","Common"],ModuleName ["Data","Text","Encoding","Utf16"],ModuleName ["Data","Text","Encoding","Utf32"],ModuleName ["Data","Text","Encoding","Utf8"],ModuleName ["Data","Text","Fusion"],ModuleName ["Data","Text","Fusion","CaseMapping"],ModuleName ["Data","Text","Fusion","Common"],ModuleName ["Data","Text","Fusion","Internal"],ModuleName ["Data","Text","Fusion","Size"],ModuleName ["Data","Text","Internal"],ModuleName ["Data","Text","Lazy","Encoding","Fusion"],ModuleName ["Data","Text","Lazy","Fusion"],ModuleName ["Data","Text","Lazy","Internal"],ModuleName ["Data","Text","Lazy","Search"],ModuleName ["Data","Text","Search"],ModuleName ["Data","Text","Unsafe"],ModuleName ["Data","Text","UnsafeChar"],ModuleName ["Data","Text","UnsafeShift"]], importDirs = ["C:\\Program Files (x86)\\Haskell\\text-0.5\\ghc-6.10.4"], libraryDirs = ["C:\\Program Files (x86)\\Haskell\\text-0.5\\ghc-6.10.4"], hsLibraries = ["HStext-0.5"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,9,1,4], versionTags = []}},PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell\\doc\\text-0.5\\html\\text.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell\\doc\\text-0.5\\html"]}]),(PackageName "transformers",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "transformers", pkgVersion = Version {versionBranch = [0,1,4,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Ross Paterson <ross@soi.city.ac.uk>", author = "Andy Gill", stability = "", homepage = "", pkgUrl = "", description = "Haskell 98 part of a monad transformer library, inspired by the paper\n\\\"Functional Programming with Overloading and Higher-Order Polymorphism\\\",\nby Mark P Jones, in /Advanced School of Functional Programming/, 1995\n(<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>).\n\nThis part contains the monad transformer class, the concrete monad\ntransformers, operations and liftings.  It can be used on its own\nin Haskell 98 code, or with the monad classes in the @monads-fd@ or\n@monads-tf@ packages, which automatically lift operations introduced\nby monad transformers through other transformers.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Monad","Identity"],ModuleName ["Control","Monad","Trans"],ModuleName ["Control","Monad","Trans","Cont"],ModuleName ["Control","Monad","Trans","Error"],ModuleName ["Control","Monad","Trans","Identity"],ModuleName ["Control","Monad","Trans","List"],ModuleName ["Control","Monad","Trans","Maybe"],ModuleName ["Control","Monad","Trans","Reader"],ModuleName ["Control","Monad","Trans","RWS"],ModuleName ["Control","Monad","Trans","RWS","Lazy"],ModuleName ["Control","Monad","Trans","RWS","Strict"],ModuleName ["Control","Monad","Trans","State"],ModuleName ["Control","Monad","Trans","State","Lazy"],ModuleName ["Control","Monad","Trans","State","Strict"],ModuleName ["Control","Monad","Trans","Writer"],ModuleName ["Control","Monad","Trans","Writer","Lazy"],ModuleName ["Control","Monad","Trans","Writer","Strict"]], hiddenModules = [], importDirs = ["C:\\Program Files (x86)\\Haskell\\transformers-0.1.4.0\\ghc-6.10.4"], libraryDirs = ["C:\\Program Files (x86)\\Haskell\\transformers-0.1.4.0\\ghc-6.10.4"], hsLibraries = ["HStransformers-0.1.4.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell\\doc\\transformers-0.1.4.0\\html\\transformers.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell\\doc\\transformers-0.1.4.0\\html"]}]),(PackageName "utf8-string",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "utf8-string", pkgVersion = Version {versionBranch = [0,3,7], versionTags = []}}, license = BSD3, copyright = "", maintainer = "emertens@galois.com", author = "Eric Mertens", stability = "", homepage = "http://github.com/glguy/utf8-string/", pkgUrl = "", description = "A UTF8 layer for IO and Strings. The utf8-string\npackage provides operations for encoding UTF8\nstrings to Word8 lists and back, and for reading and\nwriting UTF8 without truncation.", category = "Codec", exposed = True, exposedModules = [ModuleName ["Codec","Binary","UTF8","String"],ModuleName ["Codec","Binary","UTF8","Generic"],ModuleName ["System","IO","UTF8"],ModuleName ["System","Environment","UTF8"],ModuleName ["Data","String","UTF8"],ModuleName ["Data","ByteString","UTF8"],ModuleName ["Data","ByteString","Lazy","UTF8"]], hiddenModules = [], importDirs = ["C:\\Program Files (x86)\\Haskell\\utf8-string-0.3.7\\ghc-6.10.4"], libraryDirs = ["C:\\Program Files (x86)\\Haskell\\utf8-string-0.3.7\\ghc-6.10.4"], hsLibraries = ["HSutf8-string-0.3.7"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,9,1,4], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\Haskell\\doc\\utf8-string-0.3.7\\html\\utf8-string.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\Haskell\\doc\\utf8-string-0.3.7\\html"]}])]), pkgDescrFile = Just ".\\LslForge.cabal", localPkgDescr = PackageDescription {package = PackageIdentifier {pkgName = PackageName "LSLForge", pkgVersion = Version {versionBranch = [0,1,6,2], versionTags = []}}, license = BSD3, licenseFile = "LICENSE", copyright = "Copyright (c) Robert Greayer 2008-2010, Others 2011-2014", maintainer = "\"Newfie Pendragon\" <elnewfie@yahoo.com>", author = "Robert Greayer <robgreayer@yahoo.com>", stability = "experimental", testedWith = [(GHC,ThisVersion (Version {versionBranch = [6,10,4], versionTags = []}))], homepage = "http:/lslforge.googlecode.com/", pkgUrl = "", bugReports = "", sourceRepos = [], synopsis = "An execution and testing framework for the Linden Scripting Language (LSL)", description = "Provides a framework for executing Linden Scripting Language scripts offline,\ni.e. outside a Second Life&#xAE; simulator.  The product is the LslForge executable,\nwhich works in cooperation with the LSLForge Eclipse plugin (the executable is not\nmuch use standalone).  This package is a derivate of LSL Plus by Robert Greayer.", category = "Language", customFieldsPD = [], buildDepends = [Dependency (PackageName "HaXml") (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [1,19], versionTags = []})) (LaterVersion (Version {versionBranch = [1,19], versionTags = []}))) (EarlierVersion (Version {versionBranch = [1,20], versionTags = []}))),Dependency (PackageName "array") (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,2], versionTags = []})) (LaterVersion (Version {versionBranch = [0,2], versionTags = []}))) (EarlierVersion (Version {versionBranch = [0,3], versionTags = []}))),Dependency (PackageName "base") (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [4,0], versionTags = []})) (LaterVersion (Version {versionBranch = [4,0], versionTags = []}))) (EarlierVersion (Version {versionBranch = [5], versionTags = []}))),Dependency (PackageName "bytestring") (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,9], versionTags = []})) (LaterVersion (Version {versionBranch = [0,9], versionTags = []}))) (EarlierVersion (Version {versionBranch = [0,10], versionTags = []}))),Dependency (PackageName "containers") (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,1], versionTags = []})) (LaterVersion (Version {versionBranch = [0,1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [0,3], versionTags = []}))),Dependency (PackageName "directory") (IntersectVersionRanges (LaterVersion (Version {versionBranch = [1], versionTags = []})) (EarlierVersion (Version {versionBranch = [1,1], versionTags = []}))),Dependency (PackageName "fclabels") (IntersectVersionRanges (LaterVersion (Version {versionBranch = [0,4], versionTags = []})) (EarlierVersion (Version {versionBranch = [0,5], versionTags = []}))),Dependency (PackageName "filepath") (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [1,1,0,0], versionTags = []})) (LaterVersion (Version {versionBranch = [1,1,0,0], versionTags = []}))) (EarlierVersion (Version {versionBranch = [1,2], versionTags = []}))),Dependency (PackageName "haskell98") AnyVersion,Dependency (PackageName "json") (ThisVersion (Version {versionBranch = [0,7], versionTags = []})),Dependency (PackageName "monads-fd") (IntersectVersionRanges (LaterVersion (Version {versionBranch = [0,0], versionTags = []})) (EarlierVersion (Version {versionBranch = [0,1], versionTags = []}))),Dependency (PackageName "network") (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [2,1], versionTags = []})) (LaterVersion (Version {versionBranch = [2,1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [2,3], versionTags = []}))),Dependency (PackageName "old-time") AnyVersion,Dependency (PackageName "parsec") (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [2,1,0,0], versionTags = []})) (LaterVersion (Version {versionBranch = [2,1,0,0], versionTags = []}))) (EarlierVersion (Version {versionBranch = [3], versionTags = []}))),Dependency (PackageName "pureMD5") (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,2], versionTags = []})) (LaterVersion (Version {versionBranch = [0,2], versionTags = []}))) (EarlierVersion (Version {versionBranch = [3], versionTags = []}))),Dependency (PackageName "random") (UnionVersionRanges (ThisVersion (Version {versionBranch = [1,0], versionTags = []})) (LaterVersion (Version {versionBranch = [1,0], versionTags = []}))),Dependency (PackageName "syb") (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,1,0,0], versionTags = []})) (LaterVersion (Version {versionBranch = [0,1,0,0], versionTags = []}))) (EarlierVersion (Version {versionBranch = [0,2,0,0], versionTags = []}))),Dependency (PackageName "template-haskell") (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [2,3,0,0], versionTags = []})) (LaterVersion (Version {versionBranch = [2,3,0,0], versionTags = []}))) (EarlierVersion (Version {versionBranch = [2,4], versionTags = []}))),Dependency (PackageName "transformers") (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,1], versionTags = []})) (LaterVersion (Version {versionBranch = [0,1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [0,2], versionTags = []}))),Dependency (PackageName "utf8-string") (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,3], versionTags = []})) (LaterVersion (Version {versionBranch = [0,3], versionTags = []}))) (EarlierVersion (Version {versionBranch = [0,4], versionTags = []})))], descCabalVersion = UnionVersionRanges (ThisVersion (Version {versionBranch = [1,5], versionTags = []})) (LaterVersion (Version {versionBranch = [1,5], versionTags = []})), buildType = Just Custom, library = Nothing, executables = [Executable {exeName = "LSLForge", modulePath = "LslForge.hs", buildInfo = BuildInfo {buildable = True, buildTools = [], cppOptions = [], ccOptions = [], ldOptions = [], pkgconfigDepends = [], frameworks = [], cSources = [], hsSourceDirs = ["src","src/Data","src/Data/Generics","src/Data/Generics/Extras","src/Data/Record","src/Language","src/Language/Lsl","src/Language/Lsl/Internal","src/Text","src/Text/ParserCombinators","src/Text/ParserCombinators/ParsecExtras"], otherModules = [ModuleName ["Data","Generics","Extras","Schemes"],ModuleName ["Data","Record","LabelExtras"],ModuleName ["Language","Lsl","Internal","AccessGenerator"],ModuleName ["Language","Lsl","Internal","Animation"],ModuleName ["Language","Lsl","Internal","AvEvents"],ModuleName ["Language","Lsl","Internal","Breakpoint"],ModuleName ["Language","Lsl","Internal","BreakpointsDeserialize"],ModuleName ["Language","Lsl","Internal","BuiltInModules"],ModuleName ["Language","Lsl","Internal","CodeHelper"],ModuleName ["Language","Lsl","Internal","CompilationServer"],ModuleName ["Language","Lsl","Internal","Compiler"],ModuleName ["Language","Lsl","Internal","Constants"],ModuleName ["Language","Lsl","Internal","DOMCombinators"],ModuleName ["Language","Lsl","Internal","DOMProcessing"],ModuleName ["Language","Lsl","Internal","DOMSourceDescriptor"],ModuleName ["Language","Lsl","Internal","DOMUnitTestDescriptor"],ModuleName ["Language","Lsl","Internal","Evaluation"],ModuleName ["Language","Lsl","Internal","EventSigs"],ModuleName ["Language","Lsl","Internal","Exec"],ModuleName ["Language","Lsl","Internal","ExecInfo"],ModuleName ["Language","Lsl","Internal","ExpressionHandler"],ModuleName ["Language","Lsl","Internal","FuncSigs"],ModuleName ["Language","Lsl","Internal","InternalLLFuncs"],ModuleName ["Language","Lsl","Internal","Key"],ModuleName ["Language","Lsl","Internal","Load"],ModuleName ["Language","Lsl","Internal","Log"],ModuleName ["Language","Lsl","Internal","Math"],ModuleName ["Language","Lsl","Internal","MetaData"],ModuleName ["Language","Lsl","Internal","NumberParsing"],ModuleName ["Language","Lsl","Internal","Optimize"],ModuleName ["Language","Lsl","Internal","OptimizerOptions"],ModuleName ["Language","Lsl","Internal","Physics"],ModuleName ["Language","Lsl","Internal","Pragmas"],ModuleName ["Language","Lsl","Internal","SerializationGenerator"],ModuleName ["Language","Lsl","Internal","SerializationInstances"],ModuleName ["Language","Lsl","Internal","SHA1"],ModuleName ["Language","Lsl","Internal","SimLL"],ModuleName ["Language","Lsl","Internal","SimMetaData"],ModuleName ["Language","Lsl","Internal","SystemTester"],ModuleName ["Language","Lsl","Internal","TestResult"],ModuleName ["Language","Lsl","Internal","Type"],ModuleName ["Language","Lsl","Internal","UnitTester"],ModuleName ["Language","Lsl","Internal","Util"],ModuleName ["Language","Lsl","Internal","WorldState"],ModuleName ["Language","Lsl","Internal","WorldStateTypes"],ModuleName ["Language","Lsl","Internal","XmlCreate"],ModuleName ["Language","Lsl","Parse"],ModuleName ["Language","Lsl","QQ"],ModuleName ["Language","Lsl","Render"],ModuleName ["Language","Lsl","Sim"],ModuleName ["Language","Lsl","Syntax"],ModuleName ["Language","Lsl","UnitTest"],ModuleName ["Language","Lsl","UnitTestEnv"],ModuleName ["Language","Lsl","WorldDef"],ModuleName ["Text","Here"],ModuleName ["Text","ParserCombinators","ParsecExtras","Language"],ModuleName ["Text","ParserCombinators","ParsecExtras","Token"]], extensions = [], extraLibs = [], extraLibDirs = [], includeDirs = [], includes = [], installIncludes = [], options = [(GHC,["-fwarn-unused-imports"])], ghcProfOptions = [], ghcSharedOptions = [], customFieldsBI = []}}], dataFiles = ["lslforge/haskell/dist/build/autogen/cabal_macros.h","lslforge/haskell/dist/build/autogen/Paths_LSLForge.hs","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Data/Generics/Extras/Schemes.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Data/Generics/Extras/Schemes.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Data/Record/LabelExtras.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Data/Record/LabelExtras.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/AccessGenerator.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/AccessGenerator.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Animation.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Animation.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/AvEvents.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/AvEvents.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Breakpoint.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Breakpoint.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/BreakpointsDeserialize.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/BreakpointsDeserialize.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/BuiltInModules.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/BuiltInModules.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/CodeHelper.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/CodeHelper.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/CompilationServer.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/CompilationServer.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Compiler.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Compiler.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Constants.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Constants.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/DOMCombinators.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/DOMCombinators.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/DOMProcessing.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/DOMProcessing.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/DOMSourceDescriptor.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/DOMSourceDescriptor.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/DOMUnitTestDescriptor.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/DOMUnitTestDescriptor.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Evaluation.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Evaluation.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/EventSigs.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/EventSigs.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Exec.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Exec.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/ExecInfo.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/ExecInfo.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/ExpressionHandler.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/ExpressionHandler.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/FuncSigs.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/FuncSigs.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/InternalLLFuncs.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/InternalLLFuncs.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Key.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Key.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Load.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Load.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Log.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Log.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Math.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Math.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/MetaData.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/MetaData.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/NumberParsing.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/NumberParsing.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Optimize.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Optimize.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/OptimizerOptions.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/OptimizerOptions.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Physics.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Physics.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Pragmas.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Pragmas.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/SerializationGenerator.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/SerializationGenerator.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/SerializationInstances.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/SerializationInstances.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/SHA1.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/SHA1.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/SimLL.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/SimLL.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/SimMetaData.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/SimMetaData.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/SystemTester.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/SystemTester.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/TestResult.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/TestResult.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Type.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Type.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/UnitTester.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/UnitTester.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Util.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/Util.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/WorldState.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/WorldState.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/WorldStateTypes.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/WorldStateTypes.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/XmlCreate.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Internal/XmlCreate.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Parse.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Parse.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/QQ.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/QQ.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Render.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Render.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Sim.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Sim.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Syntax.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/Syntax.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/UnitTest.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/UnitTest.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/UnitTestEnv.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/UnitTestEnv.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/WorldDef.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Language/Lsl/WorldDef.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Text/ParserCombinators/ParsecExtras/Language.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Text/ParserCombinators/ParsecExtras/Language.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Text/ParserCombinators/ParsecExtras/Token.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Text/ParserCombinators/ParsecExtras/Token.o","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Main.hi","lslforge/haskell/dist/build/LSLForge/LSLForge-tmp/Main.o","lslforge/haskell/dist/build/LSLForge/LSLForge.exe","lslforge/haskell/dist/setup-config","lslforge/haskell/src/Data/Generics/Extras/Schemes.hs","lslforge/haskell/src/Data/Record/LabelExtras.hs","lslforge/haskell/src/Language/Lsl/Internal/AccessGenerator.hs","lslforge/haskell/src/Language/Lsl/Internal/Animation.hs","lslforge/haskell/src/Language/Lsl/Internal/AvEvents.hs","lslforge/haskell/src/Language/Lsl/Internal/Breakpoint.hs","lslforge/haskell/src/Language/Lsl/Internal/BreakpointsDeserialize.hs","lslforge/haskell/src/Language/Lsl/Internal/BuiltInModules.hs","lslforge/haskell/src/Language/Lsl/Internal/CodeHelper.hs","lslforge/haskell/src/Language/Lsl/Internal/CompilationServer.hs","lslforge/haskell/src/Language/Lsl/Internal/Compiler.hs","lslforge/haskell/src/Language/Lsl/Internal/Constants.hs","lslforge/haskell/src/Language/Lsl/Internal/DOMCombinators.hs","lslforge/haskell/src/Language/Lsl/Internal/DOMProcessing.hs","lslforge/haskell/src/Language/Lsl/Internal/DOMSourceDescriptor.hs","lslforge/haskell/src/Language/Lsl/Internal/DOMUnitTestDescriptor.hs","lslforge/haskell/src/Language/Lsl/Internal/Evaluation.hs","lslforge/haskell/src/Language/Lsl/Internal/EventSigs.hs","lslforge/haskell/src/Language/Lsl/Internal/Exec.hs","lslforge/haskell/src/Language/Lsl/Internal/ExecInfo.hs","lslforge/haskell/src/Language/Lsl/Internal/ExpressionHandler.hs","lslforge/haskell/src/Language/Lsl/Internal/FuncSigs.hs","lslforge/haskell/src/Language/Lsl/Internal/InternalLLFuncs.hs","lslforge/haskell/src/Language/Lsl/Internal/Key.hs","lslforge/haskell/src/Language/Lsl/Internal/Load.hs","lslforge/haskell/src/Language/Lsl/Internal/Log.hs","lslforge/haskell/src/Language/Lsl/Internal/Math.hs","lslforge/haskell/src/Language/Lsl/Internal/MetaData.hs","lslforge/haskell/src/Language/Lsl/Internal/NumberParsing.hs","lslforge/haskell/src/Language/Lsl/Internal/Optimize.hs","lslforge/haskell/src/Language/Lsl/Internal/OptimizerOptions.hs","lslforge/haskell/src/Language/Lsl/Internal/Physics.hs","lslforge/haskell/src/Language/Lsl/Internal/Pragmas.hs","lslforge/haskell/src/Language/Lsl/Internal/SerializationGenerator.hs","lslforge/haskell/src/Language/Lsl/Internal/SerializationInstances.hs","lslforge/haskell/src/Language/Lsl/Internal/SHA1.hs","lslforge/haskell/src/Language/Lsl/Internal/SimLL.hs","lslforge/haskell/src/Language/Lsl/Internal/SimMetaData.hs","lslforge/haskell/src/Language/Lsl/Internal/SystemTester.hs","lslforge/haskell/src/Language/Lsl/Internal/TestResult.hs","lslforge/haskell/src/Language/Lsl/Internal/Type.hs","lslforge/haskell/src/Language/Lsl/Internal/UnitTester.hs","lslforge/haskell/src/Language/Lsl/Internal/Util.hs","lslforge/haskell/src/Language/Lsl/Internal/WorldState.hs","lslforge/haskell/src/Language/Lsl/Internal/WorldStateTypes.hs","lslforge/haskell/src/Language/Lsl/Internal/XmlCreate.hs","lslforge/haskell/src/Language/Lsl/Parse.hs","lslforge/haskell/src/Language/Lsl/QQ.hs","lslforge/haskell/src/Language/Lsl/Render.hs","lslforge/haskell/src/Language/Lsl/Render.patch","lslforge/haskell/src/Language/Lsl/Sim.hs","lslforge/haskell/src/Language/Lsl/Syntax.hs","lslforge/haskell/src/Language/Lsl/UnitTest.hs","lslforge/haskell/src/Language/Lsl/UnitTestEnv.hs","lslforge/haskell/src/Language/Lsl/WorldDef.hs","lslforge/haskell/src/Text/ParserCombinators/ParsecExtras/Language.hs","lslforge/haskell/src/Text/ParserCombinators/ParsecExtras/Token.hs","lslforge/haskell/src/Text/Here.hs","lslforge/haskell/src/LslForge.hs","lslforge/haskell/LICENSE","lslforge/haskell/LslForge.cabal","lslforge/haskell/LslForge.cabal.bak","lslforge/haskell/NOTICE","lslforge/haskell/Setup.hs"], dataDir = "", extraSrcFiles = ["NOTICE"], extraTmpFiles = []}, withPrograms = [("alex",ConfiguredProgram {programId = "alex", programVersion = Just (Version {versionBranch = [3,0,5], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\Haskell Platform\\2013.2.0.0\\lib\\extralibs\\bin\\alex.exe"}}),("ar",ConfiguredProgram {programId = "ar", programVersion = Nothing, programArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\ghc\\ghc-6.10.4\\bin\\ar.exe"}}),("cpphs",ConfiguredProgram {programId = "cpphs", programVersion = Just (Version {versionBranch = [1,18], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\Users\\Raimund\\AppData\\Roaming\\cabal\\bin\\cpphs.exe"}}),("gcc",ConfiguredProgram {programId = "gcc", programVersion = Just (Version {versionBranch = [3,4,5], versionTags = []}), programArgs = ["-BC:\\ghc\\ghc-6.10.4\\gcc-lib","-IC:\\ghc\\ghc-6.10.4\\include\\mingw"], programLocation = FoundOnSystem {locationPath = "C:\\ghc\\ghc-6.10.4\\gcc.exe"}}),("ghc",ConfiguredProgram {programId = "ghc", programVersion = Just (Version {versionBranch = [6,10,4], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\ghc\\ghc-6.10.4\\bin\\ghc.exe"}}),("ghc-pkg",ConfiguredProgram {programId = "ghc-pkg", programVersion = Just (Version {versionBranch = [6,10,4], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\ghc\\ghc-6.10.4\\bin\\ghc-pkg.exe"}}),("haddock",ConfiguredProgram {programId = "haddock", programVersion = Just (Version {versionBranch = [2,4,2], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\ghc\\ghc-6.10.4\\bin\\haddock.exe"}}),("happy",ConfiguredProgram {programId = "happy", programVersion = Just (Version {versionBranch = [1,18,10], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\Haskell Platform\\2013.2.0.0\\lib\\extralibs\\bin\\happy.exe"}}),("hsc2hs",ConfiguredProgram {programId = "hsc2hs", programVersion = Just (Version {versionBranch = [0,67], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\ghc\\ghc-6.10.4\\bin\\hsc2hs.exe"}}),("hscolour",ConfiguredProgram {programId = "hscolour", programVersion = Just (Version {versionBranch = [1,20], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\Users\\Raimund\\AppData\\Roaming\\cabal\\bin\\HsColour.exe"}}),("ld",ConfiguredProgram {programId = "ld", programVersion = Nothing, programArgs = ["-x"], programLocation = FoundOnSystem {locationPath = "C:\\ghc\\ghc-6.10.4\\gcc-lib\\ld.exe"}}),("ranlib",ConfiguredProgram {programId = "ranlib", programVersion = Nothing, programArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\Haskell Platform\\2013.2.0.0\\mingw\\bin\\ranlib.exe"}}),("strip",ConfiguredProgram {programId = "strip", programVersion = Nothing, programArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\Haskell Platform\\2013.2.0.0\\mingw\\bin\\strip.exe"}}),("tar",ConfiguredProgram {programId = "tar", programVersion = Nothing, programArgs = [], programLocation = FoundOnSystem {locationPath = "C:\\cygwin64\\bin\\tar.exe"}})], withPackageDB = GlobalPackageDB, withVanillaLib = True, withProfLib = False, withSharedLib = False, withProfExe = False, withOptimization = NormalOptimisation, withGHCiLib = True, splitObjs = False, stripExes = True, progPrefix = "", progSuffix = ""}